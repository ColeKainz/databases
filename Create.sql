CREATE TABLE Processor
(
cpuid       int          GENERATED BY DEFAULT ON NULL AS IDENTITY,
family      varchar(10)  NOT NULL,
frequency   DECIMAL(3,2) NOT NULL,
corecount   int          NOT NULL,
threadcount int          NOT NULL,
PRIMARY KEY (cpuid)
);

CREATE TABLE Memory
(
memid      int GENERATED BY DEFAULT ON NULL AS IDENTITY,
frequency  int NOT NULL,
capacity   int NOT NULL,
stickcount int NOT NULL,
PRIMARY KEY (memid)
);

CREATE TABLE Card
(
carid     int         GENERATED BY DEFAULT ON NULL AS IDENTITY,
type      varchar(25) NOT NULL,
bandwidth int         NOT NULL,
portcount int         NOT NULL,
PRIMARY KEY(carid)
);

CREATE TABLE Location
(
locid      int         GENERATED BY DEFAULT ON NULL AS IDENTITY,
building   varchar(25) NOT NULL,
rack       int         NOT NULL,
topu       int         NOT NULL,
formfactor int         NOT NULL,
PRIMARY KEY (locid)
);

CREATE TABLE Manager
(
manid  int         GENERATED BY DEFAULT ON NULL AS IDENTITY,
email  varchar(25) NOT NULL,
office varchar(5)  NOT NULL,
PRIMARY KEY (manid)
);

CREATE TABLE Employee
(
empid   int         GENERATED BY DEFAULT ON NULL AS IDENTITY,
manid   int         NOT NULL,
email   varchar(25) NOT NULL,
cubicle varchar(5)  NOT NULL,
PRIMARY KEY (empid),
FOREIGN KEY (manid) REFERENCES Manager(manid) ON DELETE CASCADE
);

CREATE TABLE Project
(
projid   int  GENERATED BY DEFAULT ON NULL AS IDENTITY,
empid    int  NOT NULL,
deadline date NOT NULL,
PRIMARY KEY (projid),
FOREIGN KEY (empid) REFERENCES Employee(empid) ON DELETE CASCADE
);

CREATE TABLE Device
(
devid varchar(10) NOT NULL,
empid int         NOT NULL,
cpuid int         NOT NULL,
memid int         NOT NULL,
carid int         NOT NULL,
locid int         NOT NULL,
typid varchar(25) NOT NULL,
PRIMARY KEY (devid),
FOREIGN KEY (empid) REFERENCES Employee(empid)  ON DELETE CASCADE,
FOREIGN KEY (cpuid) REFERENCES Processor(cpuid) ON DELETE CASCADE,
FOREIGN KEY (memid) REFERENCES Memory(memid)    ON DELETE CASCADE,
FOREIGN KEY (carid) REFERENCES Card(carid)      ON DELETE CASCADE,
FOREIGN KEY (locid) REFERENCES Location(locid)  ON DELETE CASCADE
);
